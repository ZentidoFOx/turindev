---
// GSAP Loader Component
---

<script>
  // Defer GSAP loading until page is loaded for better performance
  function loadGSAP() {
    // Import GSAP from node_modules
    import('gsap').then(({ gsap }) => {
      return Promise.all([
        import('gsap/ScrollTrigger'),
        import('gsap/Draggable')
      ]).then(([{ ScrollTrigger }, { Draggable }]) => {
        // Prevent multiple initializations
        if (!(window as any).gsapLoaded) {
          // Register plugins
          gsap.registerPlugin(ScrollTrigger, Draggable);

          // Make GSAP available globally for main.js
          (window as any).gsap = gsap;
          (window as any).ScrollTrigger = ScrollTrigger;
          (window as any).Draggable = Draggable;
          
          // Mark as loaded to prevent duplicate loading
          (window as any).gsapLoaded = true;

          console.log('GSAP loaded from node_modules successfully');
          
          // Trigger custom event to notify main.js that GSAP is ready
          const gsapReadyEvent = new CustomEvent('gsapReady');
          document.dispatchEvent(gsapReadyEvent);
        }
      });
    }).catch(error => {
      console.error('Failed to load GSAP:', error);
    });
  }

  // Load GSAP after page content is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadGSAP);
  } else {
    // Use requestIdleCallback for better performance if available
    if ('requestIdleCallback' in window) {
      requestIdleCallback(loadGSAP);
    } else {
      setTimeout(loadGSAP, 100);
    }
  }
</script>
