---
// Layout principal sin GSAP
import Icons from "../components/Icons.astro";
---
<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Preload critical fonts first -->
    <link rel="preload" href="/fonts/inter-400.ttf" as="font" type="font/ttf" crossorigin>
    <link rel="preload" href="/fonts/inter-600.ttf" as="font" type="font/ttf" crossorigin>
    
    <!-- Critical CSS - All fonts inline, no external requests -->
    <style>
      /* Inter font family - all weights inline */
      @font-face {
        font-family: 'Inter';
        font-weight: 300;
        font-display: swap;
        src: url('/fonts/inter-300.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-weight: 400;
        font-display: swap;
        src: url('/fonts/inter-400.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-weight: 500;
        font-display: swap;
        src: url('/fonts/inter-500.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-weight: 600;
        font-display: swap;
        src: url('/fonts/inter-600.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-weight: 700;
        font-display: swap;
        src: url('/fonts/inter-700.ttf') format('truetype');
      }
      
      /* Critical above-the-fold styles */
      body {
        font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #020617;
        color: #fff;
        margin: 0;
        overflow-x: hidden;
        line-height: 1.6;
      }
      
      .hero-section {
        min-height: 100vh;
        position: relative;
        padding-top: 3rem;
        display: flex;
        align-items: center;
      }
      
      .hero-title {
        font-size: clamp(2rem, 8vw, 4.5rem);
        font-weight: 700;
        line-height: 1.1;
        margin: 0;
        letter-spacing: -0.02em;
      }
      
      /* Mouse glow - optimized to prevent forced reflow */
      .mouse-glow {
        position: fixed;
        width: 300px;
        height: 300px;
        background: radial-gradient(circle, rgba(34, 197, 94, 0.15) 0%, transparent 70%);
        pointer-events: none;
        z-index: 9999;
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: opacity 0.3s ease;
        will-change: transform, opacity;
        contain: layout style paint;
      }
      
      /* Critical header styles - optimized for performance */
      #main-header {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 50;
        height: 4rem;
        background: rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        transition: background-color 0.3s ease, backdrop-filter 0.3s ease;
        will-change: background-color, backdrop-filter;
        contain: layout style;
      }
      
      /* Critical button styles */
      .btn-primary {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        background: linear-gradient(135deg, #059669, #10b981);
        color: white;
        font-weight: 600;
        border-radius: 1rem;
        text-decoration: none;
        transition: all 0.3s ease;
      }
      
      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(16, 185, 129, 0.4);
      }
      
      /* Additional critical styles to reduce render blocking */
      .container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 0 1rem;
      }
      
      .grid {
        display: grid;
      }
      
      .flex {
        display: flex;
      }
      
      .hidden {
        display: none;
      }
      
      .text-center {
        text-align: center;
      }
      
      .text-white {
        color: #ffffff;
      }
      
      .bg-black {
        background-color: #000000;
      }
      
      /* Critical responsive utilities */
      @media (min-width: 768px) {
        .md\:flex {
          display: flex;
        }
        .md\:hidden {
          display: none;
        }
      }
      
      @media (max-width: 767px) {
        .mobile-menu {
          position: fixed;
          top: 4rem;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(0, 0, 0, 0.95);
          backdrop-filter: blur(20px);
          z-index: 40;
        }
      }
    </style>
    
    <!-- CSS will be loaded normally by Astro - no manual loading needed -->
    
    <!-- Fonts loaded inline - no external CSS blocking -->
    
    <!-- Defer non-critical image loading -->
    <link rel="prefetch" href="/images/bg.avif" as="image" type="image/avif">
    
    <!-- Bloquear indexaci칩n -->
    <meta name="robots" content="noindex, nofollow" />

    <!-- SEO b치sico -->
    <title>Turin.dev | Agencia de Desarrollo Web Profesional</title>
    <meta
      name="description"
      content="En Turin.dev creamos lugares web modernos, r치pidos y optimizados. Agencia de desarrollo web con soluciones en dise침o, frontend, backend y SEO."
    />
    
  </head>
  <body class="bg-black overflow-x-hidden">
    <!-- Mouse Glow Effect -->
    <div id="mouse-glow" class="mouse-glow"></div>
    
    <Icons />
    <slot />
    
    <!-- Critical performance script - Optimized -->
    <script is:inline>
      // Immediate critical content display
      document.documentElement.style.setProperty('--bg-opacity', '0');
      
      // Load background image after FCP
      function loadBackgroundImage() {
        const img = new Image();
        img.onload = function() {
          document.body.classList.add('loaded');
          document.documentElement.style.setProperty('--bg-opacity', '1');
        };
        img.src = '/images/bg.avif';
      }
      
      // Load after critical content
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          setTimeout(loadBackgroundImage, 100);
        });
      } else {
        setTimeout(loadBackgroundImage, 100);
      }
      
      // Fallback for slow connections
      setTimeout(() => {
        document.body.classList.add('loaded');
        document.documentElement.style.setProperty('--bg-opacity', '1');
      }, 3000);
    </script>
    
    <!-- Critical JavaScript inline for immediate execution -->
    <script is:inline>
      // Critical header functionality inline
      function initHeaderCritical() {
        const header = document.getElementById('main-header');
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (!header || !mobileMenuBtn || !mobileMenu) return;
        
        // Mobile menu toggle
        mobileMenuBtn.addEventListener('click', function() {
          const isHidden = mobileMenu.classList.contains('hidden');
          if (isHidden) {
            mobileMenu.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
          } else {
            mobileMenu.classList.add('hidden');
            document.body.style.overflow = '';
          }
        });
        
        // Close menu on link click
        const menuLinks = mobileMenu.querySelectorAll('a');
        menuLinks.forEach(function(link) {
          link.addEventListener('click', function() {
            mobileMenu.classList.add('hidden');
            document.body.style.overflow = '';
          });
        });
      }
      
      // Initialize immediately
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initHeaderCritical);
      } else {
        initHeaderCritical();
      }
    </script>
    
    <!-- Load non-critical JavaScript async - optimized -->
    <script is:inline>
      // Load scripts asynchronously - optimized to prevent forced reflow
      function loadScript(src) {
        var script = document.createElement('script');
        script.src = src;
        script.async = true;
        script.defer = true;
        document.head.appendChild(script);
      }
      
      // Load after initial render - with idle callback optimization
      function initAsyncScripts() {
        if ('requestIdleCallback' in window) {
          requestIdleCallback(function() {
            loadScript('/main.js');
            loadScript('/js/gsap-init.js');
          }, { timeout: 1000 });
        } else {
          setTimeout(function() {
            loadScript('/main.js');
            loadScript('/js/gsap-init.js');
          }, 200);
        }
      }
      
      // Initialize when browser is idle
      initAsyncScripts();
    </script>
  </body>
</html>
